# -*- coding: utf-8 -*-
"""student-04-5859cc09764d (Aug 28, 2025, 8:06:04â€¯AM)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/embedded/projects/qwiklabs-gcp-02-0b35817aba3e/locations/us-central1/repositories/2ae0067a-8f79-47ea-898b-57de83bdae83
"""

# Commented out IPython magic to ensure Python compatibility.
# %%bigquery
#  CREATE SCHEMA IF NOT EXISTS emergency_calls
#  OPTIONS(
#  location="us",
#  default_table_expiration_days=14 );

# Commented out IPython magic to ensure Python compatibility.
# %%bigquery
#  CREATE OR REPLACE EXTERNAL TABLE `qwiklabs-gcp-02-0b35817aba3e.emergency_calls.emergency_calls_table`
#  OPTIONS (
#    format = 'CSV',
#    uris = ['gs://labs.roitraining.com/data-to-ai-workshop/emergency_calls_response_times.csv'],
#    skip_leading_rows = 1,
#    allow_jagged_rows = false,
#    allow_quoted_newlines = false,
#    field_delimiter = ',',
#    max_bad_records = 10
#  )
#  ;

# Commented out IPython magic to ensure Python compatibility.
# %%bigquery
#  CREATE OR REPLACE TABLE `qwiklabs-gcp-02-0b35817aba3e.emergency_calls.emergency_calls_table_encoded` AS (
#    SELECT
#      -- Select all original columns, excluding those we are transforming to avoid duplication
#      * EXCEPT (
#        call_type, weather_condition, day_of_week, traffic_level
#      ),
# 
#      -- Step 1: One-hot encode All String Fields
#      -- Creates a new column for each category with a 1 or 0
#      -- call_type
#      CASE WHEN call_type = 'Police' THEN 1 ELSE 0 END AS call_type_police,
#      CASE WHEN call_type = 'Medical' THEN 1 ELSE 0 END AS call_type_medical,
#      CASE WHEN call_type = 'Fire' THEN 1 ELSE 0 END AS call_type_fire,
#      CASE WHEN call_type = 'Rescue' THEN 1 ELSE 0 END AS call_type_rescue,
#      -- weather_condition
#      CASE WHEN weather_condition = 'Rainy' THEN 1 ELSE 0 END AS weather_condition_rainy,
#      CASE WHEN weather_condition = 'Snowy' THEN 1 ELSE 0 END AS weather_condition_snowy,
#      CASE WHEN weather_condition = 'Sunny' THEN 1 ELSE 0 END AS weather_condition_sunny,
#      CASE WHEN weather_condition = 'Windy' THEN 1 ELSE 0 END AS weather_condition_windy,
#      -- day_of_week
#      CASE WHEN day_of_week = 'Sunday' THEN 1 ELSE 0 END AS day_of_week_sunday,
#      CASE WHEN day_of_week = 'Monday' THEN 1 ELSE 0 END AS day_of_week_monday,
#      CASE WHEN day_of_week = 'Tuesday' THEN 1 ELSE 0 END AS day_of_week_tuesday,
#      CASE WHEN day_of_week = 'Wednesday' THEN 1 ELSE 0 END AS day_of_week_wednesday,
#      CASE WHEN day_of_week = 'Thursday' THEN 1 ELSE 0 END AS day_of_week_thursday,
#      CASE WHEN day_of_week = 'Friday' THEN 1 ELSE 0 END AS day_of_week_friday,
#      CASE WHEN day_of_week = 'Saturday' THEN 1 ELSE 0 END AS day_of_week_saturday,
#      -- traffic_level
#      CASE WHEN traffic_level = 'High' THEN 1 ELSE 0 END AS traffic_level_high,
#      CASE WHEN traffic_level = 'Medium' THEN 1 ELSE 0 END AS traffic_level_medium,
#      CASE WHEN traffic_level = 'Low' THEN 1 ELSE 0 END AS traffic_level_low
# 
#      FROM
#      `qwiklabs-gcp-02-0b35817aba3e.emergency_calls.emergency_calls_table`
#  );

# Commented out IPython magic to ensure Python compatibility.
# %%bigquery create_model
#  CREATE OR REPLACE MODEL `qwiklabs-gcp-02-0b35817aba3e.emergency_calls.emergency_calls_response_times_model`
#  OPTIONS (model_type='linear_reg',
#  input_label_cols=['response_time']) AS
#  SELECT * FROM `qwiklabs-gcp-02-0b35817aba3e.emergency_calls.emergency_calls_table_encoded`
#  WHERE response_time IS NOT NULL AND call_timestamp BETWEEN '2023-01-01' AND '2023-11-30'
# ;

# Commented out IPython magic to ensure Python compatibility.
# %%bigquery prediction
#  SELECT * FROM ML.PREDICT (
#      MODEL`qwiklabs-gcp-02-0b35817aba3e.emergency_calls.emergency_calls_response_times_model`,
#        (SELECT * FROM `qwiklabs-gcp-02-0b35817aba3e.emergency_calls.emergency_calls_table_encoded`
#        WHERE response_time IS NOT NULL AND call_timestamp BETWEEN '2023-12-01' AND '2023-12-31'))
# ;